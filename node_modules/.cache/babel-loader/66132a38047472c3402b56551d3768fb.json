{"remainingRequest":"/Users/admin/Desktop/MyProjects/frontend-team-vue/node_modules/babel-loader/lib/index.js!/Users/admin/Desktop/MyProjects/frontend-team-vue/node_modules/eslint-loader/index.js??ref--13-0!/Users/admin/Desktop/MyProjects/frontend-team-vue/src/plugins/aliftech-ui/utils/maska/mask.js","dependencies":[{"path":"/Users/admin/Desktop/MyProjects/frontend-team-vue/src/plugins/aliftech-ui/utils/maska/mask.js","mtime":1651230815098},{"path":"/Users/admin/Desktop/MyProjects/frontend-team-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Desktop/MyProjects/frontend-team-vue/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/admin/Desktop/MyProjects/frontend-team-vue/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc29ydC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuY29uc3RydWN0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGVhdC5qcyI7CmltcG9ydCBkZWZhdWx0VG9rZW5zIGZyb20gJy4vdG9rZW5zJzsKZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbWFzayh2YWx1ZSwgbWFzaykgewogIHZhciB0b2tlbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMiAmJiBhcmd1bWVudHNbMl0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1syXSA6IGRlZmF1bHRUb2tlbnM7CiAgdmFyIG1hc2tlZCA9IGFyZ3VtZW50cy5sZW5ndGggPiAzICYmIGFyZ3VtZW50c1szXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzNdIDogdHJ1ZTsKICByZXR1cm4gcHJvY2Vzc01hc2sobWFzaykubGVuZ3RoID4gMSA/IGR5bmFtaWMobWFzaykodmFsdWUsIG1hc2ssIHRva2VucywgbWFza2VkKSA6IHByb2Nlc3ModmFsdWUsIG1hc2ssIHRva2VucywgbWFza2VkKTsKfQoKZnVuY3Rpb24gcHJvY2Vzc01hc2sobWFzaykgewogIHRyeSB7CiAgICByZXR1cm4gSlNPTi5wYXJzZShtYXNrKTsKICB9IGNhdGNoIChfdW51c2VkKSB7CiAgICByZXR1cm4gW21hc2tdOwogIH0KfQoKZnVuY3Rpb24gZHluYW1pYyhtYXNrKSB7CiAgdmFyIG1hc2tzID0gcHJvY2Vzc01hc2sobWFzaykuc29ydChmdW5jdGlvbiAoYSwgYikgewogICAgcmV0dXJuIGEubGVuZ3RoIC0gYi5sZW5ndGg7CiAgfSk7CiAgcmV0dXJuIGZ1bmN0aW9uICh2YWx1ZSwgbWFzaywgdG9rZW5zKSB7CiAgICB2YXIgbWFza2VkID0gYXJndW1lbnRzLmxlbmd0aCA+IDMgJiYgYXJndW1lbnRzWzNdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbM10gOiB0cnVlOwogICAgdmFyIHByb2Nlc3NlZCA9IG1hc2tzLm1hcChmdW5jdGlvbiAobSkgewogICAgICByZXR1cm4gcHJvY2Vzcyh2YWx1ZSwgbSwgdG9rZW5zLCBmYWxzZSk7CiAgICB9KTsKICAgIHZhciBsYXN0ID0gcHJvY2Vzc2VkLnBvcCgpOwoKICAgIGZvciAodmFyIGkgaW4gbWFza3MpIHsKICAgICAgaWYgKGNoZWNrTWFzayhsYXN0LCBtYXNrc1tpXSwgdG9rZW5zKSkgewogICAgICAgIHJldHVybiBwcm9jZXNzKHZhbHVlLCBtYXNrc1tpXSwgdG9rZW5zLCBtYXNrZWQpOwogICAgICB9CiAgICB9CgogICAgcmV0dXJuICcnOyAvLyBlbXB0eSBtYXNrcwogIH07CgogIGZ1bmN0aW9uIGNoZWNrTWFzayh2YXJpYW50LCBtYXNrLCB0b2tlbnMpIHsKICAgIGZvciAodmFyIHRvayBpbiB0b2tlbnMpIHsKICAgICAgaWYgKHRva2Vuc1t0b2tdLmVzY2FwZSkgewogICAgICAgIG1hc2sgPSBtYXNrLnJlcGxhY2UobmV3IFJlZ0V4cCh0b2sgKyAnLnsxfScsICdnJyksICcnKTsKICAgICAgfQogICAgfQoKICAgIHJldHVybiBtYXNrLnNwbGl0KCcnKS5maWx0ZXIoZnVuY3Rpb24gKGVsKSB7CiAgICAgIHJldHVybiB0b2tlbnNbZWxdICYmIHRva2Vuc1tlbF0ucGF0dGVybjsKICAgIH0pLmxlbmd0aCA+PSB2YXJpYW50Lmxlbmd0aDsKICB9Cn0KCmZ1bmN0aW9uIHByb2Nlc3ModmFsdWUsIG1hc2ssIHRva2VucykgewogIHZhciBtYXNrZWQgPSBhcmd1bWVudHMubGVuZ3RoID4gMyAmJiBhcmd1bWVudHNbM10gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1szXSA6IHRydWU7CiAgdmFyIGltID0gMDsKICB2YXIgaXYgPSAwOwogIHZhciByZXQgPSAnJzsKICB2YXIgcmVzdCA9ICcnOwoKICB3aGlsZSAoaW0gPCBtYXNrLmxlbmd0aCAmJiBpdiA8IHZhbHVlLmxlbmd0aCkgewogICAgdmFyIG1hc2tDaGFyID0gbWFza1tpbV07CiAgICB2YXIgdmFsdWVDaGFyID0gdmFsdWVbaXZdOwogICAgdmFyIHRva2VuID0gdG9rZW5zW21hc2tDaGFyXTsKCiAgICBpZiAodG9rZW4gJiYgdG9rZW4ucGF0dGVybikgewogICAgICBpZiAodG9rZW4ucGF0dGVybi50ZXN0KHZhbHVlQ2hhcikpIHsKICAgICAgICByZXQgKz0gdG9rZW5UcmFuc2Zvcm0odmFsdWVDaGFyLCB0b2tlbik7CiAgICAgICAgaW0rKzsgLy8gY2hlY2sgbmV4dCBjaGFyCgogICAgICAgIGlmIChtYXNrZWQgJiYgbWFza1tpbV0pIHsKICAgICAgICAgIGlmICghdG9rZW5zW21hc2tbaW1dXSkgewogICAgICAgICAgICByZXQgKz0gbWFza1tpbV07CiAgICAgICAgICAgIGltKys7CiAgICAgICAgICB9IGVsc2UgaWYgKHRva2Vuc1ttYXNrW2ltXV0gJiYgdG9rZW5zW21hc2tbaW1dXS5lc2NhcGUpIHsKICAgICAgICAgICAgcmV0ICs9IG1hc2tbaW0gKyAxXTsKICAgICAgICAgICAgaW0gPSBpbSArIDI7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CgogICAgICBpdisrOwogICAgfSBlbHNlIGlmICh0b2tlbiAmJiB0b2tlbi5yZXBlYXQpIHsKICAgICAgdmFyIHRva2VuUHJldiA9IHRva2Vuc1ttYXNrW2ltIC0gMV1dOwoKICAgICAgaWYgKHRva2VuUHJldiAmJiAhdG9rZW5QcmV2LnBhdHRlcm4udGVzdCh2YWx1ZUNoYXIpKSB7CiAgICAgICAgaW0rKzsKICAgICAgfSBlbHNlIHsKICAgICAgICBpbS0tOwogICAgICB9CiAgICB9IGVsc2UgewogICAgICBpZiAodG9rZW4gJiYgdG9rZW4uZXNjYXBlKSB7CiAgICAgICAgaW0rKzsKICAgICAgICBtYXNrQ2hhciA9IG1hc2tbaW1dOwogICAgICB9CgogICAgICBpZiAobWFza2VkKSByZXQgKz0gbWFza0NoYXI7CiAgICAgIGlmICh2YWx1ZUNoYXIgPT09IG1hc2tDaGFyKSBpdisrOwogICAgICBpbSsrOwogICAgfQogIH0gLy8gZml4IG1hc2sgdGhhdCBlbmRzIHdpdGggcGFyZW50aGVzaXMKCgogIHdoaWxlIChtYXNrZWQgJiYgaW0gPCBtYXNrLmxlbmd0aCkgewogICAgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bm1vZGlmaWVkLWxvb3AtY29uZGl0aW9uCiAgICB2YXIgbWFza0NoYXJSZXN0ID0gbWFza1tpbV07CgogICAgaWYgKHRva2Vuc1ttYXNrQ2hhclJlc3RdKSB7CiAgICAgIHJlc3QgPSAnJzsKICAgICAgYnJlYWs7CiAgICB9CgogICAgcmVzdCArPSBtYXNrQ2hhclJlc3Q7CiAgICBpbSsrOwogIH0KCiAgcmV0dXJuIHJldCArIHJlc3Q7Cn0KLyoqCiAqCiAqIEBwYXJhbSB7U3RyaW5nfSB2YWx1ZQogKiBAcGFyYW0geyd1cHBlcmNhc2UnIHwgJ2xvd2VyY2FzZScgfCAndHJhbnNmb3JtJ30gdG9rZW4KICovCgoKZnVuY3Rpb24gdG9rZW5UcmFuc2Zvcm0odmFsdWUsIHRva2VuKSB7CiAgaWYgKHRva2VuLnRyYW5zZm9ybSkgewogICAgdmFsdWUgPSB0b2tlbi50cmFuc2Zvcm0odmFsdWUpOwogIH0KCiAgaWYgKHRva2VuLnVwcGVyY2FzZSkgewogICAgcmV0dXJuIHZhbHVlLnRvTG9jYWxlVXBwZXJDYXNlKCk7CiAgfSBlbHNlIGlmICh0b2tlbi5sb3dlcmNhc2UpIHsKICAgIHJldHVybiB2YWx1ZS50b0xvY2FsZUxvd2VyQ2FzZSgpOwogIH0KCiAgcmV0dXJuIHZhbHVlOwp9"},{"version":3,"sources":["/Users/admin/Desktop/MyProjects/frontend-team-vue/src/plugins/aliftech-ui/utils/maska/mask.js"],"names":["defaultTokens","mask","value","tokens","masked","processMask","length","dynamic","process","JSON","parse","masks","sort","a","b","processed","map","m","last","pop","i","checkMask","variant","tok","escape","replace","RegExp","split","filter","el","pattern","im","iv","ret","rest","maskChar","valueChar","token","test","tokenTransform","repeat","tokenPrev","maskCharRest","transform","uppercase","toLocaleUpperCase","lowercase","toLocaleLowerCase"],"mappings":"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","sourcesContent":["import defaultTokens from './tokens';\n\nexport default function mask(value, mask, tokens = defaultTokens, masked = true) {\n  return processMask(mask).length > 1\n    ? dynamic(mask)(value, mask, tokens, masked)\n    : process(value, mask, tokens, masked);\n}\n\nfunction processMask(mask) {\n  try {\n    return JSON.parse(mask);\n  } catch {\n    return [mask];\n  }\n}\n\nfunction dynamic(mask) {\n  const masks = processMask(mask).sort((a, b) => a.length - b.length);\n\n  return function(value, mask, tokens, masked = true) {\n    const processed = masks.map(m => process(value, m, tokens, false));\n    const last = processed.pop();\n\n    for (let i in masks) {\n      if (checkMask(last, masks[i], tokens)) {\n        return process(value, masks[i], tokens, masked);\n      }\n    }\n\n    return ''; // empty masks\n  };\n\n  function checkMask(variant, mask, tokens) {\n    for (let tok in tokens) {\n      if (tokens[tok].escape) {\n        mask = mask.replace(new RegExp(tok + '.{1}', 'g'), '');\n      }\n    }\n\n    return mask.split('').filter(el => tokens[el] && tokens[el].pattern).length >= variant.length;\n  }\n}\n\nfunction process(value, mask, tokens, masked = true) {\n  let im = 0;\n  let iv = 0;\n  let ret = '';\n  let rest = '';\n\n  while (im < mask.length && iv < value.length) {\n    let maskChar = mask[im];\n    const valueChar = value[iv];\n    const token = tokens[maskChar];\n\n    if (token && token.pattern) {\n      if (token.pattern.test(valueChar)) {\n        ret += tokenTransform(valueChar, token);\n        im++;\n        // check next char\n        if (masked && mask[im]) {\n          if (!tokens[mask[im]]) {\n            ret += mask[im];\n            im++;\n          } else if (tokens[mask[im]] && tokens[mask[im]].escape) {\n            ret += mask[im + 1];\n            im = im + 2;\n          }\n        }\n      }\n      iv++;\n    } else if (token && token.repeat) {\n      const tokenPrev = tokens[mask[im - 1]];\n      if (tokenPrev && !tokenPrev.pattern.test(valueChar)) {\n        im++;\n      } else {\n        im--;\n      }\n    } else {\n      if (token && token.escape) {\n        im++;\n        maskChar = mask[im];\n      }\n      if (masked) ret += maskChar;\n      if (valueChar === maskChar) iv++;\n      im++;\n    }\n  }\n\n  // fix mask that ends with parenthesis\n  while (masked && im < mask.length) {\n    // eslint-disable-line no-unmodified-loop-condition\n    const maskCharRest = mask[im];\n    if (tokens[maskCharRest]) {\n      rest = '';\n      break;\n    }\n    rest += maskCharRest;\n    im++;\n  }\n  return ret + rest;\n}\n\n/**\n *\n * @param {String} value\n * @param {'uppercase' | 'lowercase' | 'transform'} token\n */\nfunction tokenTransform(value, token) {\n  if (token.transform) {\n    value = token.transform(value);\n  }\n\n  if (token.uppercase) {\n    return value.toLocaleUpperCase();\n  } else if (token.lowercase) {\n    return value.toLocaleLowerCase();\n  }\n\n  return value;\n}\n"]}]}