{"remainingRequest":"/Users/admin/Desktop/MyProjects/frontend-team-vue/node_modules/babel-loader/lib/index.js!/Users/admin/Desktop/MyProjects/frontend-team-vue/node_modules/eslint-loader/index.js??ref--13-0!/Users/admin/Desktop/MyProjects/frontend-team-vue/src/services/survey.js","dependencies":[{"path":"/Users/admin/Desktop/MyProjects/frontend-team-vue/src/services/survey.js","mtime":1651230815104},{"path":"/Users/admin/Desktop/MyProjects/frontend-team-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Desktop/MyProjects/frontend-team-vue/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/admin/Desktop/MyProjects/frontend-team-vue/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgYXBpQ2xpZW50IH0gZnJvbSAnfi9zZXJ2aWNlcy9hcGlDbGllbnQnOwp2YXIgRU5EX1BPSU5UID0gJy9jbGllbnQvc3VydmV5cyc7Ci8qKgogKiBHZXQgQWxsIFN1cnZleXMKICogQHJldHVybnMgeyBQcm9taXNlPEF4aW9zUmVzcG9uc2U8YW55Pj4gfQogKi8KCnZhciBnZXRJbmRleFN1cnZleSA9IGZ1bmN0aW9uIGdldEluZGV4U3VydmV5KCkgewogIHJldHVybiBhcGlDbGllbnQuZ2V0KCIiLmNvbmNhdChFTkRfUE9JTlQpKTsKfTsKLyoqCiAqIEdldCBBbGwgU3VydmV5cwogKiBAcmV0dXJucyB7IFByb21pc2U8QXhpb3NSZXNwb25zZTxhbnk+PiB9CiAqLwoKCnZhciBnZXRTaG93U3VydmV5UXVlc3Rpb25zID0gZnVuY3Rpb24gZ2V0U2hvd1N1cnZleVF1ZXN0aW9ucyhzdXJ2ZXlJZCkgewogIHJldHVybiBhcGlDbGllbnQuZ2V0KCIiLmNvbmNhdChFTkRfUE9JTlQsICIvIikuY29uY2F0KHN1cnZleUlkKSk7Cn07Ci8qKgogKiBTZW5kIEFuc3dlciB0byBxdWVzdGlvbgogKiBAcGFyYW0ge09iamVjdH0KICogQHJldHVybnMgeyBQcm9taXNlPEF4aW9zUmVzcG9uc2U8YW55Pj4gfQogKi8KCgp2YXIgc2VuZEFuc3dlclF1ZXN0aW9uID0gZnVuY3Rpb24gc2VuZEFuc3dlclF1ZXN0aW9uKHN1cnZleUlkLCBwYXJhbSkgewogIHJldHVybiBhcGlDbGllbnQucG9zdCgiIi5jb25jYXQoRU5EX1BPSU5ULCAiLyIpLmNvbmNhdChzdXJ2ZXlJZCwgIi9jb21wbGV0ZSIpLCBwYXJhbSk7Cn07CgpleHBvcnQgeyBnZXRJbmRleFN1cnZleSwgZ2V0U2hvd1N1cnZleVF1ZXN0aW9ucywgc2VuZEFuc3dlclF1ZXN0aW9uIH07"},{"version":3,"sources":["/Users/admin/Desktop/MyProjects/frontend-team-vue/src/services/survey.js"],"names":["apiClient","END_POINT","getIndexSurvey","get","getShowSurveyQuestions","surveyId","sendAnswerQuestion","param","post"],"mappings":"AAAA,SAASA,SAAT,QAA0B,sBAA1B;AAEA,IAAMC,SAAS,GAAG,iBAAlB;AAEA;AACA;AACA;AACA;;AACA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA,SAAMF,SAAS,CAACG,GAAV,WAAiBF,SAAjB,EAAN;AAAA,CAAvB;AAEA;AACA;AACA;AACA;;;AACA,IAAMG,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAAC,QAAQ;AAAA,SAAIL,SAAS,CAACG,GAAV,WAAiBF,SAAjB,cAA8BI,QAA9B,EAAJ;AAAA,CAAvC;AAEA;AACA;AACA;AACA;AACA;;;AACA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACD,QAAD,EAAWE,KAAX;AAAA,SAAqBP,SAAS,CAACQ,IAAV,WAAkBP,SAAlB,cAA+BI,QAA/B,gBAAoDE,KAApD,CAArB;AAAA,CAA3B;;AAEA,SAASL,cAAT,EAAyBE,sBAAzB,EAAiDE,kBAAjD","sourcesContent":["import { apiClient } from '~/services/apiClient';\n\nconst END_POINT = '/client/surveys';\n\n/**\n * Get All Surveys\n * @returns { Promise<AxiosResponse<any>> }\n */\nconst getIndexSurvey = () => apiClient.get(`${END_POINT}`);\n\n/**\n * Get All Surveys\n * @returns { Promise<AxiosResponse<any>> }\n */\nconst getShowSurveyQuestions = surveyId => apiClient.get(`${END_POINT}/${surveyId}`);\n\n/**\n * Send Answer to question\n * @param {Object}\n * @returns { Promise<AxiosResponse<any>> }\n */\nconst sendAnswerQuestion = (surveyId, param) => apiClient.post(`${END_POINT}/${surveyId}/complete`, param);\n\nexport { getIndexSurvey, getShowSurveyQuestions, sendAnswerQuestion };\n"]}]}